{"version":3,"sources":["App.js","index.js"],"names":["LocationList","setLocation","useState","history","setHistory","refreshHistory","saved","localStorage","getItem","JSON","parse","axios","post","ic","phone","then","res","data","map","record","location","Location","action","CheckIn","useEffect","checkInRecords","filter","forEach","outRecord","i","_","index","length","lastLocation","title","style","width","margin","onClick","dataSource","split","renderItem","item","Item","ImportOutlined","color","ExportOutlined","CheckInPage","afterSubmit","savedIC","savedPhone","name","initialValues","remember","onFinish","form","setItem","stringify","removeItem","rules","required","message","initialValue","placeholder","valuePropName","label","type","htmlType","size","shape","background","borderColor","App","className","position","left","marginLeft","top","ArrowLeftOutlined","marginTop","ReactDOM","render","document","getElementById"],"mappings":"mUAOA,SAASA,EAAT,GAAwC,IAAhBC,EAAe,EAAfA,YAAe,EACPC,mBAAS,IADF,mBAC9BC,EAD8B,KACrBC,EADqB,KAG/BC,EAAiB,WACrB,IAAIC,EAAQC,aAAaC,QAAQ,eACnB,OAAVF,IACFA,EAAQG,KAAKC,MAAMJ,GACnBK,IAAMC,KAAK,eAAgB,CACzB,GAAMN,EAAMO,GACZ,MAASP,EAAMQ,QACdC,MAAK,SAAAC,GACNZ,EAAWY,EAAIC,KAAKC,KAAI,SAAAC,GACtB,MAAO,CACLC,SAAUD,EAAOE,SACjBC,OAAQH,EAAOI,QAAU,WAAa,sBAOhDC,oBAAUnB,EAAgB,IAG1B,IAAIoB,EAAiBtB,EAAQuB,QAAO,SAAAP,GAAM,MAAsB,aAAlBA,EAAOG,UAC/BnB,EAAQuB,QAAO,SAAAP,GAAM,MAAsB,aAAlBA,EAAOG,UACtCK,SAAQ,SAAAC,GACtB,IADoC,IAAD,WAC1BC,GACP,GAAIJ,EAAeI,GAAGT,WAAaQ,EAAUR,SAE3C,OADAK,EAAiBA,EAAeC,QAAO,SAACI,EAAGC,GAAJ,OAAcA,IAAUF,KAC/D,SAHKA,EAAI,EAAGA,EAAIJ,EAAeO,OAAQH,IAAK,gBAAvCA,GAGL,UAIN,IAAII,EAAe,KACfR,EAAeO,OAAS,IAC1BC,EAAeR,EAAeA,EAAeO,OAAS,GAAGZ,UAa3D,OACE,gCACE,8BACoB,OAAjBa,EACC,eAAC,IAAD,CAAMC,MAAM,gBAAgBC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,aAAzD,UACE,6BAAKJ,IACL,cAAC,IAAD,CAAQK,QAAS,WACf,IAAIhC,EAAQC,aAAaC,QAAQ,eACnB,OAAVF,IACFA,EAAQG,KAAKC,MAAMJ,GACnBK,IAAMC,KAAK,eAAgB,CACzB,GAAMN,EAAMO,GACZ,MAASP,EAAMQ,MACf,SAAYmB,EACZ,SAAW,IACVlB,KAAKV,KATZ,0BAcQ,OAId,yDACA,cAAC,IAAD,CACEkC,WApCY,CAChB,kBACA,kBACA,kBACA,kBACA,gBACA,gBACA,gBACA,iBA6BIC,OAAO,EACPC,WAAY,SAAAC,GAAI,OACd,cAAC,IAAKC,KAAN,UACE,cAAC,IAAD,CACER,MAAO,CAAEE,OAAQ,OAAQD,MAAO,KAChCE,QAAS,kBAAMrC,EAAYyC,IAF7B,SAIGA,SAMT,cAAC,IAAD,CAAMR,MAAM,UAAUC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,aAAnD,SACE,cAAC,IAAD,CACEE,WAAYpC,EACZsC,WAAY,SAAAtB,GAAM,OAChB,eAAC,IAAKwB,KAAN,WACE,+BACqB,aAAlBxB,EAAOG,OACN,cAACsB,EAAA,EAAD,CAAgBT,MAAO,CAAEU,MAAO,WAChC,cAACC,EAAA,EAAD,CAAgBX,MAAO,CAAEU,MAAO,WAEpC,+BAAO1B,EAAOC,sBAU5B,SAAS2B,EAAT,GAAiD,IAA1B3B,EAAyB,EAAzBA,SAAU4B,EAAe,EAAfA,YAC3B1B,EAAS,WAmBThB,EAAQC,aAAaC,QAAQ,eAC7ByC,EAAU,KACVC,EAAa,KAOjB,OANc,OAAV5C,IAEF2C,GADA3C,EAAQG,KAAKC,MAAMJ,IACHO,GAChBqC,EAAa5C,EAAMQ,OAInB,8BACE,cAAC,IAAD,CAAMoB,MAAOd,EAAUe,MAAO,CAAEC,MAAO,IAAKC,OAAQ,aAApD,SACE,eAAC,IAAD,CACEc,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SAhCO,SAACC,GACVA,EAAKF,SACP9C,aAAaiD,QAAQ,cAAe/C,KAAKgD,UAAUF,IAEnDhD,aAAamD,WAAW,eAG1B/C,IAAMC,KAAK,eAAgB,CACzB,GAAM2C,EAAK1C,GACX,MAAS0C,EAAKzC,MACd,SAAYM,EACZ,QAAsB,aAAXE,IACVP,MAAK,WACNiC,QAgBE,UAKE,cAAC,IAAKL,KAAN,CACEQ,KAAK,KACLQ,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+BACnCC,aAAcb,EAHhB,SAKE,cAAC,IAAD,CAAOc,YAAY,gBAGrB,cAAC,IAAKpB,KAAN,CACEQ,KAAK,QACLQ,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oCACnCC,aAAcZ,EAHhB,SAKE,cAAC,IAAD,CAAOa,YAAY,qBAGrB,cAAC,IAAKpB,KAAN,CAAWQ,KAAK,WAAWa,cAAc,UAAUC,MAAM,2BAAzD,SACE,cAAC,IAAD,MAGF,cAAC,IAAKtB,KAAN,UACE,cAAC,IAAD,CACEuB,KAAK,UACLC,SAAS,SACTC,KAAK,QACLC,MAAM,QACNlC,MAAO,CAAEmC,WAAY,UAAWC,YAAa,UAAWnC,MAAO,KAC/DE,QAAS,WAAQhB,EAAS,YAN5B,wBAYF,cAAC,IAAKqB,KAAN,UACE,cAAC,IAAD,CACEwB,SAAS,SACTC,KAAK,QACLC,MAAM,QACNlC,MAAO,CAAEC,MAAO,KAChBE,QAAS,WAAQhB,EAAS,aAL5B,gCAmDGkD,MAnCf,WAAgB,IAAD,EACmBtE,mBAAS,MAD5B,mBACNkB,EADM,KACInB,EADJ,KAGb,OACE,sBAAKwE,UAAU,MAAf,UACE,8BACgB,OAAbrD,EACC,eAAC,IAAD,CACE8C,KAAK,OACL/B,MAAO,CACLuC,SAAU,WACVC,KAAM,MACNC,YAAa,IACbC,IAAK,IAEPvC,QAAS,kBAAMrC,EAAY,OAR7B,UAUE,cAAC6E,EAAA,EAAD,IAVF,UAYA,OAIJ,qBAAI3C,MAAO,CAAE4C,UAAW,IAAxB,iBAAkC,yCAClC,8BACgB,OAAb3D,EACC,cAACpB,EAAD,CAAcC,YAAaA,IAC3B,cAAC8C,EAAD,CAAa3B,SAAUA,EAAU4B,YAAa,kBAAM/C,EAAY,eCjO1E+E,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.39fb63b4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Card, Form, Input, Button, Switch, List } from 'antd';\r\nimport { ArrowLeftOutlined, ExportOutlined, ImportOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\n\r\nfunction LocationList({ setLocation }) {\r\n  const [history, setHistory] = useState([]);\r\n\r\n  const refreshHistory = () => {\r\n    let saved = localStorage.getItem('particulars');\r\n    if (saved !== null) {\r\n      saved = JSON.parse(saved);\r\n      axios.post(\"/api/history\", {\r\n        \"IC\": saved.ic,\r\n        \"Phone\": saved.phone,\r\n      }).then(res => {\r\n        setHistory(res.data.map(record => {\r\n          return {\r\n            location: record.Location,\r\n            action: record.CheckIn ? 'check-in' : 'check-out'\r\n          };\r\n        }))\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(refreshHistory, []);\r\n\r\n  // find the last check in location that has not been checked out\r\n  let checkInRecords = history.filter(record => record.action === 'check-in');\r\n  let checkOutRecords = history.filter(record => record.action !== 'check-in');\r\n  checkOutRecords.forEach(outRecord => {\r\n    for (let i = 0; i < checkInRecords.length; i++) {\r\n      if (checkInRecords[i].location === outRecord.location) {\r\n        checkInRecords = checkInRecords.filter((_, index) => index !== i);\r\n        break;\r\n      }\r\n    }\r\n  })\r\n  let lastLocation = null;\r\n  if (checkInRecords.length > 0) {\r\n    lastLocation = checkInRecords[checkInRecords.length - 1].location;\r\n  }\r\n\r\n  const locations = [\r\n    'SUTD Building 1',\r\n    'SUTD Building 2',\r\n    'SUTD Building 3',\r\n    'SUTD Building 5',\r\n    'SUTD Block 55',\r\n    'SUTD Block 57',\r\n    'SUTD Block 59',\r\n    'SUTD Block 61',\r\n  ];\r\n  return (\r\n    <div>\r\n      <div>\r\n        {lastLocation !== null ?\r\n          <Card title='Last check-in' style={{ width: 300, margin: '40px auto' }}>\r\n            <h3>{lastLocation}</h3>\r\n            <Button onClick={() => {\r\n              let saved = localStorage.getItem('particulars');\r\n              if (saved !== null) {\r\n                saved = JSON.parse(saved);\r\n                axios.post(\"/api/checkin\", {\r\n                  \"IC\": saved.ic,\r\n                  \"Phone\": saved.phone,\r\n                  \"Location\": lastLocation,\r\n                  \"CheckIn\": false,\r\n                }).then(refreshHistory);\r\n              }\r\n            }}>\r\n              Check out\r\n            </Button>\r\n          </Card> : null\r\n        }\r\n      </div>\r\n\r\n      <h3>Where are you visiting?</h3>\r\n      <List\r\n        dataSource={locations}\r\n        split={false}\r\n        renderItem={item => (\r\n          <List.Item>\r\n            <Button\r\n              style={{ margin: \"auto\", width: 300 }}\r\n              onClick={() => setLocation(item)}\r\n            >\r\n              {item}\r\n            </Button>\r\n          </List.Item>\r\n        )}\r\n      />\r\n\r\n      <Card title=\"History\" style={{ width: 300, margin: '40px auto' }}>\r\n        <List\r\n          dataSource={history}\r\n          renderItem={record => (\r\n            <List.Item>\r\n              <span>\r\n                {record.action === 'check-in' ?\r\n                  <ImportOutlined style={{ color: \"green\" }} /> :\r\n                  <ExportOutlined style={{ color: \"red\" }} />}\r\n              </span>\r\n              <span>{record.location}</span>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction CheckInPage({ location, afterSubmit }) {\r\n  let action = \"check-in\";\r\n\r\n  let onFinish = (form) => {\r\n    if (form.remember) {\r\n      localStorage.setItem(\"particulars\", JSON.stringify(form));\r\n    } else {\r\n      localStorage.removeItem(\"particulars\");\r\n    }\r\n\r\n    axios.post(\"/api/checkin\", {\r\n      \"IC\": form.ic,\r\n      \"Phone\": form.phone,\r\n      \"Location\": location,\r\n      \"CheckIn\": action === \"check-in\",\r\n    }).then(() => {\r\n      afterSubmit();\r\n    });\r\n  };\r\n\r\n  let saved = localStorage.getItem('particulars');\r\n  let savedIC = null;\r\n  let savedPhone = null;\r\n  if (saved !== null) {\r\n    saved = JSON.parse(saved);\r\n    savedIC = saved.ic;\r\n    savedPhone = saved.phone;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card title={location} style={{ width: 300, margin: '40px auto' }}>\r\n        <Form\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"ic\"\r\n            rules={[{ required: true, message: 'Please input your NRIC/FIN' }]}\r\n            initialValue={savedIC}\r\n          >\r\n            <Input placeholder=\"NRIC/FIN:\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"phone\"\r\n            rules={[{ required: true, message: 'Please input your mobile number' }]}\r\n            initialValue={savedPhone}\r\n          >\r\n            <Input placeholder=\"Mobile Number:\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" label=\"Remember my particulars:\">\r\n            <Switch />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              size=\"large\"\r\n              shape=\"round\"\r\n              style={{ background: \"#1FAF71\", borderColor: \"#1FAF71\", width: 180 }}\r\n              onClick={() => { action = \"check-in\" }}\r\n            >\r\n              Check-In\r\n            </Button>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              htmlType=\"submit\"\r\n              size=\"large\"\r\n              shape=\"round\"\r\n              style={{ width: 180 }}\r\n              onClick={() => { action = \"check-out\" }}\r\n            >\r\n              Check-Out\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [location, setLocation] = useState(null);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        {location !== null ?\r\n          <Button\r\n            type=\"text\"\r\n            style={{\r\n              position: 'absolute',\r\n              left: '50%',\r\n              marginLeft: -160,\r\n              top: 20\r\n            }}\r\n            onClick={() => setLocation(null)}\r\n          >\r\n            <ArrowLeftOutlined />Back\r\n          </Button> :\r\n          null\r\n        }\r\n      </div>\r\n\r\n      <h1 style={{ marginTop: 20 }}>Safe<b>Entry</b></h1>\r\n      <div>\r\n        {location === null ?\r\n          <LocationList setLocation={setLocation} /> :\r\n          <CheckInPage location={location} afterSubmit={() => setLocation(null)} />\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}